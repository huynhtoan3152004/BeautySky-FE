import { useEffect, useState } from "react";
import { CheckCircleIcon, XCircleIcon } from "@heroicons/react/24/solid";
import { motion } from "framer-motion";
import { useNavigate, useSearchParams } from "react-router-dom";
import orderAPI from "../../services/order"; // Import API x·ª≠ l√Ω ƒë∆°n h√†ng
import Navbar from "../../components/Navbar/Navbar";
import Footer from "../../components/Footer/Footer";
import Swal from "sweetalert2";
import { useNotifications } from "../../context/NotificationContext";

const PaymentSuccess = () => {
  const navigate = useNavigate();
  const [searchParams] = useSearchParams();
  const [status, setStatus] = useState("pending");
  const orderId = searchParams.get("orderId"); // L·∫•y orderId t·ª´ URL
  const { addNotification } = useNotifications();

  useEffect(() => {
    const completeOrder = async () => {
      if (!orderId) {
        setStatus("failed");
        Swal.fire({
          icon: "error",
          title: "L·ªói thanh to√°n!",
          text: "Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng.",
        });
        return;
      }

      try {
        const response = await orderAPI.createOrderCompleted(orderId);

        if (response && response.status === "Complete") {
          setStatus("success");
          Swal.fire({
            icon: "success",
            title: "Thanh to√°n th√†nh c√¥ng!",
            text: "ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n.",
          });
          addNotification("B·∫°n ƒë√£ thanh to√°n th√†nh c√¥ng! üéâ");
        } else {
          setStatus("failed");
          Swal.fire({
            icon: "error",
            title: "Thanh to√°n th·∫•t b·∫°i!",
            text: "C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i.",
          });
        }
      } catch (error) {
        console.error("L·ªói khi ho√†n t·∫•t ƒë∆°n h√†ng:", error);
        setStatus("failed");
        Swal.fire({
          icon: "error",
          title: "L·ªói h·ªá th·ªëng!",
          text: "Kh√¥ng th·ªÉ x·ª≠ l√Ω ƒë∆°n h√†ng. H√£y th·ª≠ l·∫°i sau.",
        });
      }
    };

    completeOrder();
  }, [orderId]);

  return (
    <>
      <Navbar />
      <div className="flex items-center justify-center min-h-screen bg-gradient-to-r from-green-100 to-blue-200 px-4 py-8 sm:px-6 lg:px-8">
        <motion.div
          initial={{ opacity: 0, scale: 0.8 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.5 }}
          className="bg-white shadow-lg rounded-lg p-4 sm:p-6 lg:p-8 text-center w-full max-w-md mx-auto"
        >
          {status === "success" ? (
            <>
              <CheckCircleIcon className="w-12 h-12 sm:w-16 sm:h-16 text-green-500 mx-auto mb-3 sm:mb-4" />
              <h1 className="text-xl sm:text-2xl font-bold text-green-600">
                Thanh to√°n th√†nh c√¥ng!
              </h1>
              <p className="text-sm sm:text-base text-gray-600 mt-2">
                C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng. ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n.
              </p>
            </>
          ) : status === "failed" ? (
            <>
              <XCircleIcon className="w-12 h-12 sm:w-16 sm:h-16 text-red-500 mx-auto mb-3 sm:mb-4" />
              <h1 className="text-xl sm:text-2xl font-bold text-red-600">
                Thanh to√°n th·∫•t b·∫°i
              </h1>
              <p className="text-sm sm:text-base text-gray-600 mt-2">
                C√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh thanh to√°n. H√£y th·ª≠ l·∫°i.
              </p>
            </>
          ) : (
            <p className="text-sm sm:text-base text-gray-600">
              ƒêang ki·ªÉm tra tr·∫°ng th√°i thanh to√°n...
            </p>
          )}

          <div className="mt-4 sm:mt-6 flex flex-col sm:flex-row justify-center gap-3 sm:gap-4">
            <button
              onClick={() => navigate("/vieworder")}
              className="w-full sm:w-auto px-4 py-2 bg-blue-500 text-white text-sm sm:text-base rounded-lg shadow hover:bg-blue-600 transition"
            >
              Xem ƒë∆°n h√†ng
            </button>
            <button
              onClick={() => navigate("/")}
              className="w-full sm:w-auto px-4 py-2 bg-gray-500 text-white text-sm sm:text-base rounded-lg shadow hover:bg-gray-600 transition"
            >
              Trang ch·ªß
            </button>
          </div>
        </motion.div>
      </div>
      <Footer />
    </>
  );
};

export default PaymentSuccess;
