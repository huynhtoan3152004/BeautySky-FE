import { useState } from "react";
import { useNavigate } from "react-router-dom";
import Navbar from "../../components/Navbar/Navbar";
import Footer from "../../components/Footer/Footer";

const questions = [
  {
    question: "Sau khi r·ª≠a m·∫∑t 30 ph√∫t, da b·∫°n c·∫£m th·∫•y th·∫ø n√†o?",
    options: [
      { text: "B√≥ng d·∫ßu, ƒë·∫∑c bi·ªát ·ªü v√πng ch·ªØ T", type: "oily" },
      { text: "Kh√¥, cƒÉng v√† c√≥ c·∫£m gi√°c kh√≥ ch·ªãu", type: "dry" },
      { text: "B√¨nh th∆∞·ªùng, kh√¥ng qu√° kh√¥ ho·∫∑c nh·ªùn", type: "normal" },
      { text: "D·ªÖ b·ªã ƒë·ªè v√† k√≠ch ·ª©ng", type: "sensitive" },
    ],
  },
  {
    question: "L·ªó ch√¢n l√¥ng c·ªßa b·∫°n tr√¥ng nh∆∞ th·∫ø n√†o?",
    options: [
      { text: "To v√† d·ªÖ th·∫•y tr√™n to√†n b·ªô khu√¥n m·∫∑t", type: "oily" },
      { text: "Nh·ªè ho·∫∑c kh√¥ng th·∫•y r√µ", type: "dry" },
      { text: "Nh·ªè ·ªü m√° nh∆∞ng l·ªõn h∆°n ·ªü v√πng ch·ªØ T", type: "normal" },
      { text: "B√¨nh th∆∞·ªùng nh∆∞ng d·ªÖ b·ªã m·∫©n ƒë·ªè", type: "sensitive" },
    ],
  },
  {
    question: "B·∫°n c√≥ th∆∞·ªùng xuy√™n b·ªã n·ªïi m·ª•n ho·∫∑c k√≠ch ·ª©ng kh√¥ng?",
    options: [
      { text: "R·∫•t d·ªÖ b·ªã m·ª•n", type: "oily" },
      { text: "Th·ªânh tho·∫£ng b·ªã kh√¥ v√† bong tr√≥c", type: "dry" },
      { text: "R·∫•t √≠t khi b·ªã m·ª•n", type: "normal" },
      { text: "D·ªÖ b·ªã ƒë·ªè v√† nh·∫°y c·∫£m v·ªõi m·ªπ ph·∫©m", type: "sensitive" },
    ],
  },
];

const skinTypeDescriptions = {
  oily: {
    name: "Da D·∫ßu",
    description:
      "Da b·∫°n c√≥ xu h∆∞·ªõng s·∫£n xu·∫•t nhi·ªÅu d·∫ßu, d·ªÖ b·ªã m·ª•n nh∆∞ng √≠t n·∫øp nhƒÉn h∆°n. H√£y s·ª≠ d·ª•ng s·∫£n ph·∫©m ki·ªÅm d·∫ßu v√† c·∫•p ·∫©m nh·∫π.",
    products: [
      { name: "S·ªØa r·ª≠a m·∫∑t ki·ªÅm d·∫ßu", image: "/images/oily-cleanser.jpg" },
      { name: "Toner ch·ª©a BHA", image: "/images/oily-toner.jpg" },
      { name: "Kem d∆∞·ª°ng gel nh·∫π", image: "/images/oily-moisturizer.jpg" },
    ],
  },
  dry: {
    name: "Da Kh√¥",
    description:
      "Da b·∫°n th∆∞·ªùng thi·∫øu n∆∞·ªõc, d·ªÖ bong tr√≥c v√† c√≥ n·∫øp nhƒÉn. H√£y s·ª≠ d·ª•ng kem d∆∞·ª°ng ·∫©m s√¢u v√† tr√°nh c√°c s·∫£n ph·∫©m c√≥ c·ªìn.",
    products: [
      { name: "S·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π", image: "/images/dry-cleanser.jpg" },
      { name: "Serum c·∫•p ·∫©m", image: "/images/dry-serum.jpg" },
      { name: "Kem d∆∞·ª°ng ·∫©m s√¢u", image: "/images/dry-moisturizer.jpg" },
    ],
  },
  normal: {
    name: "Da Th∆∞·ªùng",
    description:
      "Da b·∫°n c√¢n b·∫±ng, kh√¥ng qu√° d·∫ßu c≈©ng kh√¥ng qu√° kh√¥. B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng h·∫ßu h·∫øt c√°c s·∫£n ph·∫©m chƒÉm s√≥c da.",
    products: [
      { name: "S·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π", image: "/images/normal-cleanser.jpg" },
      { name: "Toner c√¢n b·∫±ng", image: "/images/normal-toner.jpg" },
      { name: "Kem d∆∞·ª°ng ·∫©m", image: "/images/normal-moisturizer.jpg" },
    ],
  },
  sensitive: {
    name: "Da Nh·∫°y C·∫£m",
    description:
      "Da b·∫°n d·ªÖ b·ªã k√≠ch ·ª©ng, m·∫©n ƒë·ªè ho·∫∑c ph·∫£n ·ª©ng v·ªõi m·ªπ ph·∫©m. H√£y s·ª≠ d·ª•ng c√°c s·∫£n ph·∫©m d·ªãu nh·∫π, kh√¥ng ch·ª©a h∆∞∆°ng li·ªáu.",
    products: [
      {
        name: "S·ªØa r·ª≠a m·∫∑t kh√¥ng x√† ph√≤ng",
        image: "/images/sensitive-cleanser.jpg",
      },
      { name: "Serum l√†m d·ªãu", image: "/images/sensitive-serum.jpg" },
      {
        name: "Kem d∆∞·ª°ng kh√¥ng ch·ª©a h∆∞∆°ng li·ªáu",
        image: "/images/sensitive-moisturizer.jpg",
      },
    ],
  },
};

const QuizPage = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState([]);
  const [result, setResult] = useState(null);
  const navigate = useNavigate();

  const handleOptionClick = (option) => {
    const updatedAnswers = [...answers, option.type];
    setAnswers(updatedAnswers);

    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      determineSkinType(updatedAnswers);
    }
  };

  const determineSkinType = (answers) => {
    const typeCount = answers.reduce((acc, type) => {
      acc[type] = (acc[type] || 0) + 1;
      return acc;
    }, {});

    const mostCommonType = Object.keys(typeCount).reduce((a, b) =>
      typeCount[a] > typeCount[b] ? a : b
    );

    setResult(skinTypeDescriptions[mostCommonType]);
  };

  return (
    <>
      <Navbar />
      <div className="min-h-screen bg-gray-50 flex flex-col items-center justify-center p-6">
        <h1 className="text-5xl font-bold text-[#6BBCFE] animate-pulse text-center mb-6">
          üîç Ki·ªÉm tra lo·∫°i da c·ªßa b·∫°n
        </h1>
        <div className="bg-white shadow-xl p-10 rounded-2xl w-full max-w-2xl text-center">
          {result ? (
            <div>
              <h2 className="text-3xl font-bold text-blue-600 animate-bounce">
                K·∫øt qu·∫£: {result.name}
              </h2>
              <p className="text-lg text-gray-700 my-6">{result.description}</p>
              <button
                className="mt-6 bg-gradient-to-r from-blue-400 to-blue-600 text-white py-3 px-8 rounded-xl font-semibold shadow-xl hover:scale-105 transition"
                onClick={() => navigate(`/routine-builder?type=${result.name}`)}
              >
                Xem l·ªô tr√¨nh chƒÉm s√≥c
              </button>
            </div>
          ) : (
            <div>
              <h2 className="text-2xl font-semibold text-blue-600">
                {questions[currentQuestion].question}
              </h2>
              <div className="mt-6 space-y-4">
                {questions[currentQuestion].options.map((option, index) => (
                  <button
                    key={index}
                    className="block w-full bg-gradient-to-r from-blue-400 to-blue-600 text-white py-3 px-8 rounded-xl shadow-xl hover:scale-105 transition"
                    onClick={() => handleOptionClick(option)}
                  >
                    {option.text}
                  </button>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
      <Footer />
    </>
  );
};

export default QuizPage;
