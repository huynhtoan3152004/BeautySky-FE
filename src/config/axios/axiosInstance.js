import axios from "axios";

const axiosInstance = axios.create({
  baseURL: "https://localhost:7112/api", // Thay ƒë·ªïi c·ªïng theo backend
  headers: { "Content-Type": "application/json" },
});

// üõ†Ô∏è Th√™m interceptor ƒë·ªÉ t·ª± ƒë·ªông g√°n token v√†o request
axiosInstance.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("token");
    if (token) {
      config.headers["Authorization"] = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

// üõ†Ô∏è Th√™m interceptor ƒë·ªÉ x·ª≠ l√Ω l·ªói token h·∫øt h·∫°n & refresh token
axiosInstance.interceptors.response.use(
  (response) => response, // Gi·ªØ nguy√™n response n·∫øu kh√¥ng c√≥ l·ªói
  async (error) => {
    const originalRequest = error.config;

    // N·∫øu l·ªói 401 (Unauthorized) => Token c√≥ th·ªÉ ƒë√£ h·∫øt h·∫°n
    if (error.response?.status === 401 && !originalRequest._retry) {
      originalRequest._retry = true; // ƒê√°nh d·∫•u request ƒë√£ th·ª≠ refresh token

      try {
        const refreshToken = localStorage.getItem("refreshToken");

        if (!refreshToken) {
          throw new Error("No refresh token found");
        }

        // G·ª≠i request l√™n BE ƒë·ªÉ l·∫•y token m·ªõi
        const res = await axios.post(
          "https://localhost:7112/api/Accounts/RefreshToken",
          { token: refreshToken }
        );

        // L∆∞u token m·ªõi v√†o localStorage
        localStorage.setItem("token", res.data.accessToken);
        localStorage.setItem("refreshToken", res.data.refreshToken);

        // G√°n token m·ªõi v√†o headers v√† g·ª≠i l·∫°i request ban ƒë·∫ßu
        originalRequest.headers[
          "Authorization"
        ] = `Bearer ${res.data.accessToken}`;
        return axiosInstance(originalRequest);
      } catch (err) {
        console.error("Refresh token failed", err);

        // N·∫øu refresh token kh√¥ng h·ª£p l·ªá, x√≥a th√¥ng tin v√† chuy·ªÉn h∆∞·ªõng ƒëƒÉng nh·∫≠p
        localStorage.removeItem("token");
        localStorage.removeItem("refreshToken");
        window.location.href = "/login"; // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang ƒëƒÉng nh·∫≠p
      }
    }

    return Promise.reject(error);
  }
);

export default axiosInstance;
